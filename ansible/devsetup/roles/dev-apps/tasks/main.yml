---
- name: Install software-properties-common 
  apt: name=software-properties-common state=latest

- name: Add Oracle Java Repository
  apt_repository: repo='ppa:webupd8team/java'

- name: Add Git Repository
  apt_repository: repo='ppa:git-core/ppa'

- name: Add Gradle Repository
  apt_repository: repo='ppa:cwchien/gradle'

- name: Add Node.js Repository
  shell: curl --silent --location https://deb.nodesource.com/setup_0.12 | sudo bash -

- name: Accept Java 8 Licence
  shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | tee /etc/oracle-java-8-licence-acceptance | /usr/bin/debconf-set-selections
  args:
    creates: /etc/oracle-java-8-licence-acceptance

- name: Install Oracle Java 8
  apt: name={{item}} state=latest
  with_items:
    - oracle-java8-installer
    - ca-certificates
    - oracle-java8-set-default

# Only run "update_cache=yes" if the last one is more than 3600 seconds ago
- apt: update_cache=yes cache_valid_time=3600

- apt: name=mousepad state=present

- name: install dev
  apt: name={{item}} state=present
  with_items:
    - maven
    - gradle
    - nodejs
    
- name: install util
  apt: name={{item}} state=present
  with_items:
    # better shell
    - zsh
    # terminal multiplexer
    - tmux
    - vim-gtk

# This is an example of how to gather information from the machine. We
# run a command with the "shell" module and register the result into the
# "default_shell" variable
- name: zsh facts
  shell: 'echo $SHELL'
  register: default_shell
  # changed when determines when will this task be considered changed when running
  # ansible. In this case, we want it to always be false, as we are just
  # retrieving information.
  changed_when: False
  sudo: no

# Now, we want to set zsh as the default shell, unless it is already the default
# one.
- name: make zsh default
  shell:  chsh -s /bin/zsh 
  # This task will run only when the following is true. In here, we check the
  # value registered previously within the "default_shell" variable.
  when: default_shell.stdout.find('/bin/zsh') == -1